name: C/C++ CI coverage and sanitize

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  coverage:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./05_hw

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v2

      - name: Install dependencies
        run: sudo apt-get install -y gcovr lcov

      - name: Configure CMake
        run: cmake -B build -S . -DCMAKE_EXPORT_COMPILE_COMMANDS=True -DSTACKLIB_COVERAGE=ON

      - name: Build project and run ctest
        run: cmake --build build --target stack_test

      - name: Run ctest
        run: cmake --build build --target coverage

      - name: ls
        run: ls -lah ./coverage/

      - name: uppload cov report
        uses: actions/upload-artifact@v4
        with:
          name: cov-report
          path: 05_hw/coverage/

  analyze:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./05_hw

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v2

      - name: Install dependencies
        run: |
          # sudo apt-get update
          # sudo apt-get install build-essential software-properties-common
          # sudo apt-add-repository "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-15 main"
          # sudo apt-get install llvm-15
          # sudo apt-get install clang-15 lld-15 lldb-15 llvm-15-dev llvm-15-tools
          sudo wget https://apt.llvm.org/llvm.sh
          sudo chmod +x llvm.sh
          sudo ./llvm.sh 17
          # llvm-config --version
          clang --version
          export $LLVM_HOME=/usr/lib/llvm-15
          export $PATH=$LLVM_HOME/bin:$PATH
          env

      - name: Check analyzer
        run: sudo find / -iname analyze-build

      - name: Configure CMake
        run: cmake -B build -S . -DCMAKE_EXPORT_COMPILE_COMMANDS=True -DCMAKE_BUILD_TYPE=Asan

      - name: Build project and run scan
        run: cmake --build build --target main
      #   run: scan-build -o ./scan-build-out cmake --build build --target main
      #     && cd build
      #     && scan-build -o ../scan-build-out make

      - name: Run analyze
        run: cmake --build build --target analyze

      - name: uppload clang-tidy report
        uses: actions/upload-artifact@v4
        with:
          name: clang-tidy-report
          path: hw_05/build/analyzer/
          # path: hw_05/scan-build-out/
